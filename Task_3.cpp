#include <iostream>     // Підключення бібліотеки для вводу/виводу
#include <iomanip>      // Підключення бібліотеки для форматування виводу
#include <limits>       // Підключення бібліотеки для роботи з обмеженнями типів

// Визначення функції f(x) = 1/x
double f(double x) {
    return 1 / x; // Повертає значення функції
}

int main() {
    double a, b, h; // Оголошення змінних для меж a, b та кроку h
    
    // Введення значень a, b та h
    std::cout << "Enter a: ";
    std::cin >> a; // Зчитування значення a
    std::cout << "Enter b: ";
    std::cin >> b; // Зчитування значення b
    std::cout << "Enter h: ";
    std::cin >> h; // Зчитування значення h

    // Перевірка на позитивність кроку
    if (h <= 0) {
        std::cerr << "Step h must be positive!" << std::endl; // Виведення помилки
        return 1; // Завершення програми з кодом помилки
    }

    // Заголовок таблиці
    std::cout << "-------------------" << std::endl;
    std::cout << ": X   : Y   :" << std::endl; // Виведення заголовків стовпців
    std::cout << "-------------------" << std::endl;

    double x = a; // Ініціалізація змінної x значенням a

    // Цикл з передумовою
    while (x <= b) { // Продовжувати, поки x не перевищує b
        // Перевірка на належність до ОДЗ
        if (x == 0) { // Якщо x = 0
            std::cout << "Value x = 0 is not in the DOD." << std::endl; // Виведення повідомлення
            break; // Вихід з циклу
        }

        double y = f(x); // Обчислення y за допомогою функції f
        // Виведення значень x і y у форматі таблиці
        std::cout << ": " << std::setw(5) << std::fixed << std::setprecision(2) << x 
                  << " : " << std::setw(5) << y << " :" << std::endl;

        x += h; // Збільшення x на крок h
    }

    std::cout << "-------------------" << std::endl; // Виведення нижнього кордону таблиці

    return 0; // Завершення програми з кодом успіху
}
